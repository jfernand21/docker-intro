apiVersion: apps/v1
kind: Deployment # Tipo de deployment
metadata:
  labels:
    tier: mongo # Etiqueta para llave-valor para luego seleccionar objetos
  name: mongodb # Nombre del objeto
spec:
  selector:
    matchLabels: # Selecciona pods controlados por este deployment con etiqueta tier = mongo
      app: mongo 
  replicas: 1 # Cantidad de pods
  strategy:
    type: Recreate # Que estrategia usar para manejar actualizaciones. RollingUpdate | Recreate
  template:
    metadata:
      labels:
        app: mongo # Etiqueta para los pods creados
    spec:
      containers:
      - name: mongodb # Nombre de contenedores creados
        image: docker.io/mongo:4.0 # Imagen a desplegar en los pods
        imagePullPolicy: IfNotPresent # Politica para traer la imagen. PullAlways
        volumeMounts: #### Volumenes a agregar. Manejan data persistente
          - mountPath: /data/db 
            name: mongo-data
        ports:
        - containerPort: 27017
      volumes: #### Lista de volumenes a agregar a los contenedores
        - name: mongo-data # Nombre de volumen
          persistentVolumeClaim:
            claimName: pvc-mongo
